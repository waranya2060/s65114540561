version: '3.8'

services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 15s

  web:
    build:
      context: .
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    # อย่า expose ออก ให้เข้าใน network ภายใน แล้ว Nginx เป็นตัวออกข้างนอกแทน
    volumes:
      - ./django_end:/app/django_end
      - static_volume:/app/staticfiles
    command: ["bash","-lc","set -e; \
      echo 'wait pg...'; until nc -z ${DB_HOST} ${DB_PORT}; do echo .; sleep 2; done; \
      echo 'migrate'; python -u /app/django_end/manage.py migrate --noinput; \
      echo 'collectstatic'; python -u /app/django_end/manage.py collectstatic --noinput; \
      echo 'start gunicorn'; exec gunicorn --chdir /app/django_end --workers 3 --bind 0.0.0.0:8000 --access-logfile - --error-logfile - django_end.wsgi:application"]

  nginx:
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "1065:80"     # เปิดให้เพื่อนเข้า http://10.80.21.37:1065
    volumes:
      - static_volume:/app/staticfiles:ro
    command:
      - /bin/sh
      - -lc
      - |
        cat >/etc/nginx/conf.d/default.conf <<'NGINX_CONF'
        upstream django_upstream { server web:8000; keepalive 32; }

        server {
          listen 80;
          server_name _;

          client_max_body_size 50m;

          # เสิร์ฟ static
          location /static/ {
            alias /app/staticfiles/;
            access_log off;
            expires 7d;
          }

          # proxy ทั้งไซต์เข้า Gunicorn
          location / {
            proxy_set_header Host "$host";
            proxy_set_header X-Real-IP "$remote_addr";
            proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";
            proxy_set_header X-Forwarded-Proto "$scheme";
            proxy_read_timeout 300;
            proxy_connect_timeout 60;
            proxy_send_timeout 300;
            proxy_pass http://django_upstream;
          }
        }
        NGINX_CONF
        # กันไฟล์มี CRLF จาก Windows
        sed -i 's/\r$//' /etc/nginx/conf.d/default.conf
        nginx -t
        exec nginx -g 'daemon off;'
    restart: unless-stopped

volumes:
  pg_data:
  static_volume:
