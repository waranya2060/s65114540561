version: '3.8'

services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 15s
 

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${WEB_PORT}:8000"
    volumes:
      - ./django_end:/app/django_end
      - static_volume:/app/staticfiles
    command:  ["bash","-lc","set -e; \
      echo 'wait pg...'; until nc -z ${DB_HOST} ${DB_PORT}; do echo .; sleep 2; done; \
      echo 'migrate'; python -u /app/django_end/manage.py migrate --noinput; \
      echo 'start gunicorn'; exec gunicorn --chdir /app/django_end --workers 3 --bind 0.0.0.0:8000 --access-logfile - --error-logfile - django_end.wsgi:application"]

  redis:
    image: redis:7
    restart: unless-stopped
    # ถ้าไม่ต้องการ expose redis ออกภายนอก ให้ลบหรือ comment ports:
    # ports:
    #   - "30561:6379"
    volumes:
      - redis_data:/data

volumes:
  pg_data:
  static_volume:
  redis_data:
